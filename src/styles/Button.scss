/**BUTTON**/

//Variables, fonts, mixins
@import "./import.scss";

//Base element
$element: Button;
$base: #{".apc"}#{$element};

//Default Styles
    /*element*/ #{$base}{
        @include defaultcss(inline-block);
        @include border;
        cursor: pointer;
        transition-duration: 300ms;
        transition-property: all;
    }
    /*icon*/ #{$base}{
        transition-duration: 300ms;
        transition-property: all;
    }

//Block
    /*element*/ #{$base}Block{
        display: block;
        width: 100%;
    }

//Rounded
    /*element*/ #{$base}Rounded{
        @include rounded;
    }

//RoundedMax
    /*element*/ #{$base}RoundedMax{
        @include roundedmax;
    }

//NoUserInput
    /*element*/ #{$base}NoUserInput{
        @include nouserinput;
    }

//Disabled
    /*element*/ #{$base}Disabled{
        @include disabled;
    }

//Sizes
@each $sizeName, $sizeMap in $sizes {

    //Variables
    $height: map-get($sizeMap, height);
    $heightnoborder: $height - 2 * $champBorderWidth;
    $width: map-get($sizeMap, width);
    $widthnoborder: $width - 2 * $champBorderWidth;
    $font-size: map-get($sizeMap, font-size);
    $padding-left: map-get($sizeMap, padding-left);
    $padding-right: map-get($sizeMap, padding-right);
    $padding-top: map-get($sizeMap, padding-top);
    $padding-bottom: map-get($sizeMap, padding-bottom);

    /*Element*/ #{$base}#{$sizeName}{
        font-size: $font-size;
        height: $height;
        padding-top: $padding-top;
        padding-bottom: $padding-bottom;
        padding-left: $padding-left;
        padding-right: $padding-right;
    };

    //icon
    #{$base}Icon#{$sizeName}{
        font-size: $font-size;
    };
}

//Colors
@each $colorName, $color in $colors{
    
    //Variables
    $background-color: $color;
    $background-color-hover: darken($color, 8%);
    $border-color: darken($color, 5%);
    $border-color-hover: $border-color;
    $colorUsed: apcTextColor($color);
    $colorUsed-hover: apcTextColor(darken($color, 5%));
    @if( $colorName == Default ){
        $background-color: map-get($colors,White);
        $background-color-hover: darken(map-get($colors,White), 8%);
        $colorUsed: lighten( map-get($colors,TextColor), $primaryTextOpacity);
        $colorUsed-hover: $colorUsed;  
    }

    //element
    #{$base}#{$colorName}{
        background-color: $background-color;
        border-color: $border-color;
        color: $colorUsed;
        &:hover{
            background-color: $background-color-hover;
            border-color: $border-color-hover;
            color: $colorUsed-hover;
        }
    }

    //icon
    #{$base}Icon#{$colorName}{
        color: $colorUsed;
    }
    #{$base}#{$colorName}{
        &:hover #{$base}Icon#{$colorName}{
            color: $colorUsed-hover;
        }
    }
}

//Colors Hollow
@each $colorName, $color in $colors{

    //Variables
    $background-color: map-get($colors,White);
    $background-color-hover: $color;
    $border-color: $color;
    $border-color-hover: darken($color, 8%);
    $colorUsed: $color;
    $colorUsed-hover: apcTextColor($color);
    @if( $colorName == Default ){
        $background-color-hover: darken(map-get($colors,White), 8%);
        $colorUsed: lighten( map-get($colors,TextColor), $primaryTextOpacity);
        $colorUsed-hover: $color;  
    }

    //element
    #{$base}#{$colorName}Hollow{
        background-color: $background-color;
        border-color: $border-color;
        color: $colorUsed;
        &:hover{
            background-color: $background-color-hover;
            border-color: $border-color-hover;
            color: $colorUsed-hover;
        }
    }

    //icon
    #{$base}Icon#{$colorName}Hollow{
        color: $colorUsed;
    }
    #{$base}#{$colorName}Hollow{
        &:hover #{$base}Icon#{$colorName}Hollow{
            color: $colorUsed-hover;
        }
    }
}

//Noborder
    /*Container*/ #{$base}NoBorder{
        @include noborder;
    }

//Nobg
    /*Container*/ #{$base}NoBg{
        @include nobg;
    }

//Link
    /*Container*/ #{$base}Link{
        @include link;
    }