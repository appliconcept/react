/**GRID**/

//Variables, fonts, mixins
@import "./import.scss";

.apcContainer, apcContainerFluid{
    box-sizing: border-box;
    display: block;
    margin: auto auto auto auto;
    padding: 0 0 0 0;
    &:after{
        content: "";
        display: table;
        clear: both; 
    }
}
.apcContainerFluid{
    width: 100%;
}
.apcRow{    
    box-sizing: border-box;
    display: block;
    margin: 0 0 0 0;
    padding: 0 $gutterSize 0 $gutterSize;
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}
.apcColumn{
    box-sizing: border-box;
    display: block;
    float: left;
    margin: 0 0 0 0;
    padding: 0 $gutterSize 0 $gutterSize;
    width: 100%;
}

//Nested row
.apcRow .apcRow{
    margin-right: -2 * $gutterSize;
    margin-left: -2 * $gutterSize;
}

//Media queries
@each $breakName, $breakMap in $breakPoints {
    @media (min-width: map-get($breakMap, screen-size)){
        .apcContainer{
            width: map-get($breakMap, container-size);
            //background-color: map-get($breakMap, color-test);
        }
        @for $i from 1 through $gridSize {
            $width: percentage( $i / $gridSize );

            .apcColumn#{$breakName}#{$i} {
                width: $width;
            }
        }
    }
}