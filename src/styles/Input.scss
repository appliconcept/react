/**INPUT**/

//Variables, fonts, mixins
@import "./import.scss";

//Base element
$element: Input;
$base: #{".apc"}#{$element};

//Default Styles
    /*Container*/ #{$base}Container{
        @include defaultcss;
        @include border;
        background-color: map-get($colors, White);
        display: flex;
    }
    /*Element Wrapper*/ #{$base}Wrapper{
        @include defaultcss;
        @include noborder;
        flex: 1;   
    }
    /*Element*/ #{$base}{
        @include defaultcss;
        @include noborder;
        background: transparent;
        height: 100%;
        width: 100%;         
    }
    /*Icon*/ #{$base}Icon{
        @include defaultcss;
        @include nouserinput;
        @include centercontent;
    }
    /*Label*/ #{$base}Label{
        @include defaultcss;
        @include nouserinput;
        @include centercontent;
        @include borderright;
        font-weight: bold;
    }
    /*Clear*/ #{$base}Clear{
        @include defaultcss;
        @include centercontent;
        cursor: pointer;
    }

//Rounded
    /*Container*/ #{$base}ContainerRounded{
        @include rounded;
    }

//RoundedMax
    /*Container*/ #{$base}ContainerRoundedMax{
        @include roundedmax;
    }

//NoUserInput
    /*Container*/ #{$base}ContainerNoUserInput{
        @include nouserinput;
    }

//Disabled
    /*Container*/ #{$base}ContainerDisabled{
        @include disabled;
    }
    /*Element*/ #{$base}Disabled{
        @include disabled;
    }
    /*Clear*/ #{$base}ClearDisabled{
        @include disabled;
    }

//Sizes and Positions
@each $sizeName, $sizeMap in $sizes {
    //Variables
    $height: map-get($sizeMap, height);
    $heightnoborder: $height - 2 * $champBorderWidth;
    $width: map-get($sizeMap, width);
    $widthnoborder: $width - 2 * $champBorderWidth;
    $font-size: map-get($sizeMap, font-size);
    $padding-left: map-get($sizeMap, padding-left);
    $padding-right: map-get($sizeMap, padding-right);
  
    /*Container*/ #{$base}Container#{$sizeName}{
        height: $height;
    }
    /*Wrapper*/ #{$base}Wrapper#{$sizeName}{
        height: $heightnoborder;
    }
    /*Element*/ #{$base}#{$sizeName}{
        height: $heightnoborder;
        padding-left: $padding-left;
    }
    /*Icon*/ #{$base}Icon#{$sizeName}{
        font-size: $font-size;
        height: $heightnoborder;
        @include fixedwidth($width);
    }
    /*Label*/ #{$base}Label#{$sizeName}{
        font-size: $font-size;
        height: $heightnoborder;
        padding-right: $padding-right;
    }
    /*Clear*/ #{$base}Clear#{$sizeName}{
        font-size: $font-size;
        height: $heightnoborder;
        @include fixedwidth(($font-size + 2));
    }
}

//Colors
@each $colorName, $color in $colors{
    //Variables
    $colorUsed: $color;
    @if($colorName == Default){
        $colorUsed: lighten(map-get($colors, TextColor), $primaryTextOpacity * 1.5);
    }

    /*Container*/ #{$base}Container#{$colorName}{
        @include border($color);
    }
    /*Element*/ #{$base}#{$colorName}{
        color: $colorUsed;
    }
    /*Icon*/ #{$base}Icon#{$colorName}{
        color: $colorUsed;
    }
    /*Label*/ #{$base}Label#{$colorName}{
        color: $colorUsed;
        @include borderright(lighten(map-get($colors, Default), 10%));
    }
    /*Clear*/ #{$base}Clear#{$colorName}{
        color: lighten(map-get($colors, TextColor), $primaryTextOpacity * 3);
    }
}

//Noborder
    /*Container*/ #{$base}ContainerNoBorder{
        @include noborder;
    }

//Nobg
    /*Container*/ #{$base}ContainerNoBg{
        @include nobg;
    }

//Link
    /*Container*/ #{$base}ContainerLink{
        @include link;
    }

//Errors
    //box
    #{$base}ErrorBox{
        color: $errorColor;
        font-size: 13px;
        position: absolute;
        text-align: right;
        top: 100%;
        width: 100%;
    }
    /*Container*/ #{$base}ContainerError{
        @include border($errorColor);
    }
    /*Element*/ #{$base}Error{
        color: $errorColor;
    }
    /*Icon*/ #{$base}IconError{
        color: $errorColor;
    }
    /*Label*/ #{$base}LabelError{
        color: $errorColor;
    }